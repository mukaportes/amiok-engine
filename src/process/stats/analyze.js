const { getAnalysisFile } = require('../../modules/doctor');
const { setItemResults, getStatsTemplate } = require('../../modules/stats');
const PROCESS_ENUM = require('../../enums/process');

module.exports = async ({ }, context) => {
  console.info(`Executing process ${PROCESS_ENUM.STATS_ANALYZE}`);

  try {
    const { apiPid } = context[PROCESS_ENUM.INFO_API_PID];
    const { startTime, endTime } = context[PROCESS_ENUM.SCRIPT_EXECUTE];

    const results = await getAnalysisFile(null, apiPid);

    if (!results) throw 'Invalid analysis file generated by Clinic Doctor.';

    const parsedResults = JSON.parse(results);

    const groupedResults = parsedResults.reduce((acc, item) => {
      let accProp = 'end';

      if (item.timestamp <= startTime) {
        acc = 'start';
      } else if (item.timestamp <= endTime) {
        acc = 'tests';
      }
        
      setItemResults(acc[accProp], item);

      return acc;
    }, {
      start: getStatsTemplate(),
      tests: getStatsTemplate(),
      end: getStatsTemplate(),
    });

    const formattedResults = Object.keys(groupedResults).map(key => formatResults(groupedResults[key]));

    return { key: PROCESS_ENUM.STATS_ANALYZE, results: formattedResults };
  } catch (error) {
    console.error(`Error executing ${PROCESS_ENUM.STATS_ANALYZE} process`, error);

    throw error;
  }
};
